@page
@model NguyenThanhDuyRazorPage.Pages.AdminArea.CarInformations.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name:
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>
<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CarInformations[0].CarName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CarInformations[0].CarDescription)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CarInformations[0].NumberOfDoors)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CarInformations[0].SeatingCapacity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CarInformations[0].FuelType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CarInformations[0].Year)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CarInformations[0].CarStatus)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CarInformations[0].CarRentingPricePerDay)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CarInformations[0].Manufacturer)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CarInformations[0].Supplier)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.CarInformations)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CarName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CarDescription)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberOfDoors)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SeatingCapacity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FuelType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Year)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CarStatus)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CarRentingPricePerDay)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Manufacturer.ManufacturerName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Supplier.SupplierName)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.CarId">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.CarId">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.CarId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>


@{
    var prevDisabled = !Model.CarInformations.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.CarInformations.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.CarInformations.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.CarInformations.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>

<div>
    <a asp-page="/OptionsPage/AdminPage">Back to Options Page</a>
</div>